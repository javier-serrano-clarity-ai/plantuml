' C4-PlantUML, version 1.0.0
' https://github.com/RicardoNiepel/C4-PlantUML

' Colors
' ##################################

!define ELEMENT_FONT_COLOR #FFFFFF

' Styling
' ##################################

!define TECHN_FONT_SIZE 12
!define STEREOTYPE_FONT_SIZE 12


skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam Arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam rectangle<<boundary>> {
    Shadowing false
    FontColor #444444
    BorderColor #444444
    BorderStyle dashed
}

' Layout
' ##################################

!definelong LAYOUT_AS_SKETCH
skinparam backgroundColor #EEEBDC
skinparam handwritten true
skinparam defaultFontName "Comic Sans MS"
hide stereotype
center footer <font color=red>[WIP]</font> Created for discussion, needs to be validated. Clarity.ai
!enddefinelong

!define LAYOUT_TOP_DOWN top to bottom direction
!define LAYOUT_LEFT_RIGHT left to right direction


' Boundaries
' ##################################

!define Boundary(e_alias, e_label) rectangle "==e_label" <<boundary>> as e_alias
!define Boundary(e_alias, e_label, e_type) rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_type]</size>"  <<boundary>> as e_alias

' Relationship
' ##################################
!define Rel_(e_alias1, e_alias2, e_direction="") e_alias1 e_direction e_alias2 : ""
!define Rel_(e_alias1, e_alias2, e_label, e_direction="") e_alias1 e_direction e_alias2 : "===e_label"
!define Rel_(e_alias1, e_alias2, e_label, e_techn, e_direction="") e_alias1 e_direction e_alias2 : "===e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//"

!define Rel(e_from,e_to) Rel_(e_from,e_to, "-->")
!define Rel(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-->")
!define Rel(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-->")

!define Rel_Back(e_to, e_from, e_label) Rel_(e_to, e_from, e_label, "<--")
!define Rel_Back(e_to, e_from, e_label, e_techn) Rel_(e_to, e_from, e_label, e_techn, "<--")

!define Rel_Neighbor(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "->")
!define Rel_Neighbor(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "->")

!define Rel_Back_Neighbor(e_to, e_from, e_label) Rel_(e_to, e_from, e_label, "<-")
!define Rel_Back_Neighbor(e_to, e_from, e_label, e_techn) Rel_(e_to, e_from, e_label, e_techn, "<-")

!define Rel_D(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-DOWN->")
!define Rel_D(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-DOWN->")
!define Rel_Down(e_from,e_to, e_label) Rel_D(e_from,e_to, e_label)
!define Rel_Down(e_from,e_to, e_label, e_techn) Rel_D(e_from,e_to, e_label, e_techn)

!define Rel_U(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-UP->")
!define Rel_U(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-UP->")
!define Rel_Up(e_from,e_to, e_label) Rel_U(e_from,e_to, e_label)
!define Rel_Up(e_from,e_to, e_label, e_techn) Rel_U(e_from,e_to, e_label, e_techn)

!define Rel_L(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-LEFT->")
!define Rel_L(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-LEFT->")
!define Rel_Left(e_from,e_to, e_label) Rel_L(e_from,e_to, e_label)
!define Rel_Left(e_from,e_to, e_label, e_techn) Rel_L(e_from,e_to, e_label, e_techn)

!define Rel_R(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-RIGHT->")
!define Rel_R(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-RIGHT->")
!define Rel_Right(e_from,e_to, e_label) Rel_R(e_from,e_to, e_label)
!define Rel_Right(e_from,e_to, e_label, e_techn) Rel_R(e_from,e_to, e_label, e_techn)

!define Rel_B(e_from,e_to) Rel_(e_from,e_to, "<-->")
!define Rel_B(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-RIGHT->")
!define Rel_B(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-RIGHT->")
!define Rel_Bidirectional(e_from,e_to, e_label) Rel_R(e_from,e_to, e_label)
!define Rel_Bidirectional(e_from,e_to, e_label, e_techn) Rel_R(e_from,e_to, e_label, e_techn)

' Layout Helpers
' ##################################

!define Lay_D(e_from, e_to) e_from -[hidden]D- e_to
!define Lay_U(e_from, e_to) e_from -[hidden]U- e_to
!define Lay_R(e_from, e_to) e_from -[hidden]R- e_to
!define Lay_L(e_from, e_to) e_from -[hidden]L- e_to

' Colors
' ##################################

!define PERSON_BG_COLOR #08427B
!define EXTERNAL_PERSON_BG_COLOR #686868
!define SYSTEM_BG_COLOR #1168BD
!define EXTERNAL_SYSTEM_BG_COLOR #999999

' Styling
' ##################################

skinparam rectangle<<person>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor PERSON_BG_COLOR
    BorderColor #073B6F
}

skinparam rectangle<<external_person>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor EXTERNAL_PERSON_BG_COLOR
    BorderColor #8A8A8A
}

skinparam rectangle<<system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor SYSTEM_BG_COLOR
    BorderColor #3C7FC0
}

skinparam rectangle<<subsystem>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor SYSTEM_BG_COLOR
    BorderColor #3C7FC0
}

skinparam rectangle<<external_system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor EXTERNAL_SYSTEM_BG_COLOR
    BorderColor #8A8A8A
}

skinparam database<<system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor SYSTEM_BG_COLOR
    BorderColor #3C7FC0
}

skinparam database<<external_system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor EXTERNAL_SYSTEM_BG_COLOR
    BorderColor #8A8A8A
}

' Layout
' ##################################


' Elements
' ##################################

!define Person_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[Person]</size>//" <<person>> as e_alias
!define Person_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[Person]</size>//\n\n e_descr" <<person>> as e_alias
!define Person(e_alias, e_label) rectangle "==e_label" <<person>> as e_alias
!define Person(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<person>> as e_alias

!define Person_Ext_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[Extenal Person]</size>//" <<external_person>> as e_alias
!define Person_Ext_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[Extenal Person]</size>//\n\n e_descr" <<external_person>> as e_alias
!define Person_Ext(e_alias, e_label) rectangle "==e_label" <<external_person>> as e_alias
!define Person_Ext(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<external_person>> as e_alias

!define System_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[System]</size>//" <<system>> as e_alias
!define System_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[System]</size>//\n\n e_descr" <<system>> as e_alias
!define System(e_alias, e_label) rectangle "==e_label" <<system>> as e_alias
!define System(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<system>> as e_aliasa

!define SubSystem_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[Subsystem]</size>//" <<subsystem>> as e_alias
!define SubSystem_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[Subsystem]</size>//\n\n e_descr" <<subsystem>> as e_alias
!define SubSystem(e_alias, e_label) rectangle "==e_label" <<subsystem>> as e_alias
!define SubSystem(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<subsystem>> as e_alias

!define System_Ext_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[External System ]</size>//" <<external_system>> as e_alias
!define System_Ext_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[External System ]</size>//\n\n e_descr" <<external_system>> as e_alias
!define System_Ext(e_alias, e_label) rectangle "==e_label" <<external_system>> as e_alias
!define System_Ext(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<external_system>> as e_alias

!define SystemDb_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[DB System]</size>//" <<system>> as e_alias
!define SystemDb_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[DB System]</size>//\n\n e_descr" <<system>> as e_alias
!define SystemDb(e_alias, e_label) database "==e_label" <<system>> as e_alias
!define SystemDb(e_alias, e_label, e_descr) database "==e_label\n\n e_descr" <<system>> as e_alias

!define SystemDb_Ext_Stereotype(e_alias, e_label) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[External DB System]</size>//" <<external_system>> as e_alias
!define SystemDb_Ext_Stereotype(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:STEREOTYPE_FONT_SIZE>[External DB System]</size>//\n\n e_descr" <<external_system>> as e_alias
!define SystemDb_Ext(e_alias, e_label) database "==e_label" <<external_system>> as e_alias
!define SystemDb_Ext(e_alias, e_label, e_descr) database "==e_label\n\n e_descr" <<external_system>> as e_alias

' Boundaries
' ##################################

!define Enterprise_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Enterprise")
!define System_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "System")
!define SubSystem_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Subsystem")

!define CONTAINER_BG_COLOR #438DD5
!define CONTAINER_TODO_BG_COLOR #f58e11


' Styling
' ##################################

skinparam rectangle<<container>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_BG_COLOR
    BorderColor #3C7FC0
}

skinparam database<<container>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_BG_COLOR
    BorderColor #3C7FC0
}

skinparam rectangle<<container_todo>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_TODO_BG_COLOR
    BorderColor #3C7FC0
}

skinparam database<<container_todo>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_TODO_BG_COLOR
    BorderColor #3C7FC0
}

' Layout
' ##################################

!definelong LAYOUT_WITH_LEGEND_CONTAINER
hide stereotype
legend right
|=              |= Type |
|<PERSON_BG_COLOR>      | person |
|<EXTERNAL_PERSON_BG_COLOR>      | external person |
|<SYSTEM_BG_COLOR>   | system |
|<EXTERNAL_SYSTEM_BG_COLOR>      | external system |
|<CONTAINER_BG_COLOR>   | container |
endlegend
!enddefinelong

' Elements
' ##################################

!define Container_Todo(e_alias, e_label) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[@TODO]</size>//\n\n @TO_BE_DEFINED" <<container_todo>> as e_alias
!define Container(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container(e_alias, e_label, e_techn, e_descr) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias
!define Container_Todo(e_alias, e_label, e_descr) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[@TODO]</size>//\n\n @TO_BE_DEFINED e_descr" <<container_todo>> as e_alias

!define ContainerDb_Todo(e_alias, e_label) database "==e_label\n//<size:TECHN_FONT_SIZE>[@TODO]</size>//\n\n @TO_BE_DEFINED" <<container_todo>> as e_alias
!define ContainerDb(e_alias, e_label, e_techn) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define ContainerDb(e_alias, e_label, e_techn, e_descr) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias
!define ContainerDb_Todo(e_alias, e_label, e_descr) database "==e_label\n//<size:TECHN_FONT_SIZE>[@TODO]</size>//\n\n @TO_BE_DEFINED e_descr" <<container_todo>> as e_alias

' Boundaries
' ##################################

!define Container_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Container")

!define COMPONENT_BG_COLOR #85BBF0

' Styling
' ##################################

skinparam rectangle<<component>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor #000000
    BackgroundColor COMPONENT_BG_COLOR
    BorderColor #78A8D8
}

skinparam database<<component>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor #000000
    BackgroundColor COMPONENT_BG_COLOR
    BorderColor #78A8D8
}

' Layout
' ##################################

!definelong LAYOUT_WITH_LEGEND_COMPONENT
hide stereotype
legend right
|=              |= Type |
|<PERSON_BG_COLOR>      | person |
|<EXTERNAL_PERSON_BG_COLOR>      | external person |
|<SYSTEM_BG_COLOR>   | system |
|<EXTERNAL_SYSTEM_BG_COLOR>      | external system |
|<CONTAINER_BG_COLOR>   | container |
|<COMPONENT_BG_COLOR>   | component |
endlegend
!enddefinelong

' Elements
' ##################################

!define Component(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<component>> as e_alias
!define Component(e_alias, e_label, e_techn, e_descr) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<component>> as e_alias

!define ComponentDb(e_alias, e_label, e_techn) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<component>> as e_alias
!define ComponentDb(e_alias, e_label, e_techn, e_descr) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<component>> as e_alias

' Styling
' ##################################

skinparam rectangle<<node>> {
    Shadowing false
    StereotypeFontSize 0
    FontColor #000000
    BorderColor #A2A2A2
    BorderStyle solid
}

' Elements
' ##################################
!unquoted function Deployment_Node($alias, $label)
!return 'rectangle "=='+$label+'" <<node>> as '+$alias
!endfunction
!unquoted function Deployment_Node($alias, $label, $type)
!return 'rectangle "=='+$label+'\n<size:'+$TECHN_FONT_SIZE+'>['+$type+']</size>" <<node>> as '+$alias
!endfunction

' Index
' ##################################

!$index=1

!function increment($step=1)
!$index = $index + $step
!endfunction

!function setIndex($new_index)
!$index=$new_index
!endfunction

' Relationship override
' ##################################

' Relationship
' ##################################

!unquoted function Rel_($e_index, $alias1, $alias2, $label, $direction="")
$alias1 $direction $alias2 : **$e_index: $label**
!endfunction
!unquoted function Rel_($e_index, $alias1, $alias2, $label, $techn, $direction="")
$alias1 $direction $alias2 : **$e_index: $label**\n//<size:$TECHN_FONT_SIZE>[$techn]</size>//
!endfunction

!unquoted function Rel($from, $to, $label)
Rel_($index, $from, $to, $label, "-->>")
increment()
!endfunction
!unquoted function Rel($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-->>")
increment()
!endfunction
!unquoted function RelIndex($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-->>")
!endfunction
!unquoted function RelIndex($e_index, $from, $to, $label, $tech)
Rel_($e_index, $from, $to, $label, $tech, "-->>")
!endfunction

!unquoted function Rel_Back($from, $to, $label)
Rel_($index, $from, $to, $label, "<<--")
increment()
!endfunction
!unquoted function Rel_Back($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "<<--")
increment()
!endfunction
!unquoted function RelIndex_Back($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "<<--")
!endfunction
!unquoted function RelIndex_Back($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "<<--")
!endfunction

!unquoted function Rel_Neighbor($from, $to, $label)
Rel_($index, $from, $to, $label, "->>")
increment()
!endfunction
!unquoted function Rel_Neighbor($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "->>")
increment()
!endfunction
!unquoted function RelIndex_Neighbor($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "->>")
!endfunction
!unquoted function RelIndex_Neighbor($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "->>")
!endfunction

!unquoted function Rel_Back_Neighbor($from, $to, $label)
Rel_($index, $from, $to, $label, "<<-")
increment()
!endfunction
!unquoted function Rel_Back_Neighbor($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "<<-")
increment()
!endfunction
!unquoted function RelIndex_Back_Neighbor($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "<<-")
!endfunction
!unquoted function RelIndex_Back_Neighbor($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "<<-")
!endfunction

!unquoted function Rel_D($from, $to, $label)
Rel_($index, $from, $to, $label, "-DOWN->>")
increment()
!endfunction
!unquoted function Rel_D($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-DOWN->>")
increment()
!endfunction
!unquoted function Rel_Down($from, $to, $label)
Rel_($index, $from, $to, $label, "-DOWN->>")
increment()
!endfunction
!unquoted function Rel_Down($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-DOWN->>")
increment()
!endfunction
!unquoted function RelIndex_D($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-DOWN->>")
!endfunction
!unquoted function RelIndex_D($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-DOWN->>")
!endfunction
!unquoted function RelIndex_Down($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-DOWN->>")
!endfunction
!unquoted function RelIndex_Down($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-DOWN->>")
!endfunction

!unquoted function Rel_U($from, $to, $label)
Rel_($index, $from, $to, $label, "-UP->>")
increment()
!endfunction
!unquoted function Rel_U($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-UP->>")
increment()
!endfunction
!unquoted function Rel_Up($from, $to, $label)
Rel_($index, $from, $to, $label, "-UP->>")
increment()
!endfunction
!unquoted function Rel_Up($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-UP->>")
increment()
!endfunction
!unquoted function RelIndex_U($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-UP->>")
!endfunction
!unquoted function RelIndex_U($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-UP->>")
!endfunction
!unquoted function RelIndex_Up($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-UP->>")
!endfunction
!unquoted function RelIndex_Up($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-UP->>")
!endfunction

!unquoted function Rel_L($from, $to, $label)
Rel_($index, $from, $to, $label, "-LEFT->>")
increment()
!endfunction
!unquoted function Rel_L($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-LEFT->>")
increment()
!endfunction
!unquoted function Rel_Left($from, $to, $label)
Rel_($index, $from, $to, $label, "-LEFT->>")
increment()
!endfunction
!unquoted function Rel_Left($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-LEFT->>")
increment()
!endfunction
!unquoted function RelIndex_L($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-LEFT->>")
!endfunction
!unquoted function RelIndex_L($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-LEFT->>")
!endfunction
!unquoted function RelIndex_Left($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-LEFT->>")
!endfunction
!unquoted function RelIndex_Left($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-LEFT->>")
!endfunction

!unquoted function Rel_R($from, $to, $label)
Rel_($index, $from, $to, $label, "-RIGHT->>")
increment()
!endfunction
!unquoted function Rel_R($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-RIGHT->>")
increment()
!endfunction
!unquoted function Rel_Right($from, $to, $label)
Rel_($index, $from, $to, $label, "-RIGHT->>")
increment()
!endfunction
!unquoted function Rel_Right($from, $to, $label, $techn)
Rel_($index, $from, $to, $label, $techn, "-RIGHT->>")
increment()
!endfunction
!unquoted function RelIndex_R($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-RIGHT->>")
!endfunction
!unquoted function RelIndex_R($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-RIGHT->>")
!endfunction
!unquoted function RelIndex_Right($e_index, $from, $to, $label)
Rel_($e_index, $from, $to, $label, "-RIGHT->>")
!endfunction
!unquoted function RelIndex_Right($e_index, $from, $to, $label, $techn)
Rel_($e_index, $from, $to, $label, $techn, "-RIGHT->>")
!endfunction
